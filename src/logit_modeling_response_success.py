'''
This script is for modeling the project success with delay responses.
It reads the input data with the delay responses and the project success.
Those are generated by other python scripts.
It uses the logistic regression model to see which responses affect to the success of the project.
'''
import pandas as pd
import numpy as np
import statsmodels.api as sm

def fit_logit_model(X, y):
    X = sm.add_constant(X)
    logit = sm.Logit(y, X).fit()
    print(logit.summary())


if __name__ == "__main__":
    response_df = pd.read_csv('temp_data/rf_predictions_ntree128_md32_delay_response_success.csv')
    response_df = response_df.dropna(subset=['response_apology', 'response_promise', 'response_ignore', 'response_transparency', 'comment_sent_score', 'before_comment_sent_score'])
    response_df = response_df[['response_apology', 'response_promise', 'response_ignore', 'response_transparency', 'comment_sent_score', 'before_comment_sent_score']]
    
    print("Comment sentiment -> Apology")
    fit_logit_model(response_df[["before_comment_sent_score"]], response_df["response_apology"])
    print("Comment sentiment -> Promise")
    fit_logit_model(response_df[["before_comment_sent_score"]], response_df["response_promise"])
    print("Comment sentiment -> Ignore")
    fit_logit_model(response_df[["before_comment_sent_score"]], response_df["response_ignore"])
    print("Comment sentiment -> Transparency")
    fit_logit_model(response_df[["before_comment_sent_score"]], response_df["response_transparency"])




